server:
  port: 8081

jwt:
  secret: testsecretisalsoasecret
  duration: 86400000 #in milliseconds 86400000 = 1day, max = 2147483647

# security
auth:
  token:
    prefix:

# Datasource
spring.datasource:
  driver-class-name: org.postgresql.Driver
  url: jdbc:postgresql://localhost:5432/ego?stringtype=unspecified

  username: postgres
  password:
  max-active: 10
  max-idle: 1
  min-idle: 1

spring:
  flyway:
    enabled: false

# set this flag in Spring 2.0 because of this open issue: https://hibernate.atlassian.net/browse/HHH-12368
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation: true

# Facebook Connection Details
facebook:
  client:
    id: 140524976574963
    secret: 2439abe7ae008bda7ab5cfdf706b4d66
    accessTokenUri: https://graph.facebook.com/oauth/access_token
    tokenValidateUri: https://graph.facebook.com/debug_token
    timeout:
      connect: 5000
      read: 5000
  resource:
    userInfoUri: https://graph.facebook.com/me

# Google Connection Details
google:
  client:
    Ids: 144611473365-k1aarg8qs6rlh67r3t7dssi1e34b6061.apps.googleusercontent.com

# ORCID Connection Details
orcid:
  client:
    id: APP-1234
    secret: secret
    baseUri: sandbox.orcid.org
    redirectUri: http://localhost:8888/orcid
    accessTokenUri: https://${orcid.client.baseUri}/oauth/token
    userInfoUri: https://api.${orcid.client.baseUri}/v2.1/_ID_/person
    timeout:
      connect: 5000
      read: 5000

# Logging settings.
logging:
  console:
    enabled: true
    threshold: ALL
  loggers:
    "org.skife.jdbi.v2": TRACE
  level:
    root: ERROR
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
    org.springframework.boot: INFO
    org.overture.ego: INFO

token:
  privateKey: thisistheprivatekey
  publicKey: thisisthepublickey

# Default values available for creation of entities
default:
  user:
    role: USER
    status: Approved
---
###############################################################################
# Profile - "jks"
###############################################################################
spring:
  profiles: jks

token:
  key-store: src/main/resources/ego-jwt.jks
  key-alias: ego-jwt
  keystore-password: eG0tistic@lly

---
###############################################################################
# Profile - "auth"
###############################################################################
spring:
  profiles: auth
  profiles.include: secure

# security
auth:
  token:
    prefix: Bearer

# Logging settings.
logging:
  console:
    enabled: true
    threshold: ALL
  loggers:
    "org.skife.jdbi.v2": TRACE

---
###############################################################################
# Profile - "demo"
###############################################################################
spring:
  profiles: demo

# demo flag
demo: false

---
###############################################################################
# Profile - "test"
###############################################################################
spring:
  profiles: test

spring.datasource:
  driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
  url: jdbc:tc:postgresql:9.5.13://localhost:5432/ego?TC_INITFUNCTION=org.overture.ego.test.FlywayInit::initTestContainers

  username: postgres
  password:
  max-active: 1000
  max-idle: 10
  min-idle: 1

orcid:
  client:
    id: APP-1234567890
    secret: 5f63d1c5-3f00-4fa5-b096-fd985ffd0df7
    accessTokenUri: http://localhost:${wiremock.server.port}/oauth/token
    userInfoUri: http://localhost:${wiremock.server.port}/v2.1/_ID_/person
